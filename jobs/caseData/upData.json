[
  {
  "name": "销项发票-开票流程测试计划",
  "desc": "实现销项发票流程的数据库，验证从导入订单至开票，整个流程，受导入订单数据和预制调整数据的影响。",
  "variable": {
    "TEST_HOST": "https://d-k8s-fbr-fp.bigfintax.com",
    "TEST_HOST_OTHER": "https://test-gateway.bigfintax.com",
    "USER_NAME_RECEPTION": "ZQBHDLGFYXGS_admin",
    "PWD_RECEPTION": "c4ca4238a0b923820dcc509a6f75849b"
  },
  "case": [
    {
      "name": "开具发票流程-全电电专-普通征税-含税",
      "desc": "导入一个带有折扣行的订单，生成预置发票，执行生成，需要审核。",
      "variable": {
      },
      "step": [
        {
          "name": "随机生成一个订单号",
          "desc": "使用随机数插件，随机生成一个订单号，存储至全局变量；",
          "type": "plugIn",
          "params": {
            "type": "random",
            "params": {
              "random_type": "STR",
              "length": 12,
              "get_field": "BILL_ID_START"
            }
          },
          "handlers": []
        },
        {
          "name": "获取订单asserts key",
          "desc": "访问asserts-key接口，并将key保留，用在之后的导入订单接口。",
          "type": "request",
          "params": {
            "name": "asserts-key接口",
            "desc": "",
            "host": "https://ddapi.bigfintax.com",
            "path": "/assembleSignatureController/get/cqbh/O7XmUkNX",
            "method": "GET",
            "post_type": "",
            "cookies": {},
            "response_type": "text",
            "data": {}
          },
          "handlers": [
            {
              "type": "extract",
              "params": {
                "field": "ASSERT_KEY",
                "type": "text",
                "path": "",
                "condition": []
              }
            }
          ]
        },
        {
          "name": "导入一条订单",
          "desc": "进行订单导入。",
          "type": "request",
          "sleep": 10,
          "params": {
            "name": "导入接口",
            "desc": "",
            "host": "https://d-k8s-xxp-ports-fp.bigfintax.com",
            "path": "/inv-xx-ports/xxp/receiptDataIn?{{ASSERT_KEY}}",
            "method": "POST",
            "post_type": "json",
            "cookies": {},
            "response_type": "json",
            "data": {
              "Count": 1,
              "RequestID": "3da5aff7c6914cf399923a72330af6191",
              "Content": [
                {
                  "BillNo": "{{BILL_ID_START}}",
                  "SellerTaxNum": "500102201007206608",
                  "Seller": "500102201007206608",
                  "SellerAddress": "武汉市东西湖区新沟镇油纱路73号1栋",
                  "SellerPhone": "027-65022526",
                  "SellerBankName": "中国光大银行武汉分行营业部",
                  "SellerBankAccount": "38310188000444553",
                  "Buyer": "全电电专-普通征税-含税",
                  "BuyerTaxNum": "123456787654111",
                  "BuyerAddress": "南京市雨花台区软件大道66号华通科技园406室",
                  "BuyerPhone": "010-88233550",
                  "BuyerBankName": "招商银行股份有限公司南京雨花支行",
                  "BuyerBankAccount": "125914056010701",
                  "Drawer": "admin",
                  "Payee": "王晗",
                  "Reviewer": "范荣峥",
                  "BillType": "1",
                  "InvoiceType": "05",
                  "TotalAmount": "1.00",
                  "InvoiceAmount": "0.88",
                  "TaxAmount": "0.12",
                  "BillDate": "20230216000000",
                  "MachineNo": "",
                  "StoreCode": "2021",
                  "SpecialInvoice": "",
                  "RedAdviceNum": "",
                  "RedConfirmNum": "",
                  "TaxMethod": "0",
                  "Items": [
                    {
                      "LineNo": "1",
                      "DetailName": "劳务派遣服务费",
                      "Unit": "升",
                      "Standard": "",
                      "Num": "1",
                      "TaxFlag": "1",
                      "Price": "1",
                      "InvoiceAmount": "0.88",
                      "SumAmount": "1.00",
                      "TaxRate": "0.13",
                      "TaxAmount": "0.12",
                      "DiscountType": "0",
                      "ParentCode": "3079900000000000000",
                      "FreeTax": "",
                      "VatSpecialManagement": "",
                      "DeductionAmount": null
                    }
                  ]
                }
              ]
            }
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "Code",
                "func": "==",
                "condition": [],
                "value_right": "200"
              }
            }
          ]
        },
        {
          "name": "前台-账号登录",
          "desc": "使用登录插件，通过前台账号密码登录-并将test_cas_access_token，存储至全局变量；",
          "type": "plugIn",
          "params": {
            "params": {
              "user_name": "{{USER_NAME_RECEPTION}}",
              "pass_word": "{{PWD_RECEPTION}}",
              "cookies_field": "COOKIES_RECEPTION"
            },
            "type": "login"
          },
          "handlers": []
        },
        {
          "name": "前台-查询导入的订单数据，并提取billId",
          "desc": "",
          "type": "request",
          "params": {
            "name": "查询预制订单列表接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/bill/queryBillInfoListNew",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "page": 1,
              "per_page": 10,
              "condition": "[{\"f\":\"billNo\",\"v\":\"{{BILL_ID_START}}\",\"op\":\"eq\",\"t\":\"s\"},{\"f\":\"createDateStart\",\"v\":\"\",\"op\":\"ge\",\"t\":\"s\"},{\"f\":\"createDateEnd\",\"v\":\"\",\"op\":\"le\",\"t\":\"s\"}]"
            }
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "data.0.billNo",
                "condition": [],
                "func": "==",
                "value_right": "{{BILL_ID_START}}"
              }
            },
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "data.0.sellerTaxNo",
                "condition": [],
                "func": "==",
                "value_right": "500102201007206608"
              }
            },
            {
              "type": "extract",
              "params": {
                "type": "json",
                "path": "data.0.id",
                "condition": [],
                "field": "BILL_ID"
              }
            }
          ]
        },
        {
          "name": "前台-根据BILL_ID，生成预置发票",
          "desc": "",
          "type": "request",
          "params": {
            "name": "生成预制发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/bill/generateTemplateInvoice",
            "method": "POST",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": [{"billId":"{{BILL_ID}}"}]
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "code",
                "condition": [],
                "func": "==",
                "value_right": 200
              }
            },
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "result",
                "condition": [],
                "func": "==",
                "value_right": "success"
              }
            }
          ]
        },
        {
          "name": "前台-根据订单编号，查询待开发票管理页面，并提取INVOICE_ID；",
          "desc": "",
          "type": "request",
          "params": {
            "name": "查询待开发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/InvoicequeryPage",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "page": 1,
              "per_page": 10,
              "pageFlag": 3,
              "condition": "[{\"f\":\"contraceNo\",\"v\":\"{{BILL_ID_START}}\",\"op\":\"eq\",\"t\":\"s\"}]"
            }
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "code",
                "condition": [],
                "func": "==",
                "value_right": 200
              }
            },
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "result",
                "condition": [],
                "func": "==",
                "value_right": "success"
              }
            },
            {
              "type": "extract",
              "params": {
                "type": "json",
                "path": "data.0.strId",
                "condition": [],
                "field": "INVOICE_ID"
              }
            }
          ]
        },
        {
          "name": "前台-查看待开发票明细；",
          "desc": "",
          "type": "request",
          "params": {
            "name": "查询待开发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/invoiceStay/queryInvoiceItem",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "invoiceId": "{{INVOICE_ID}}"
            }
          },
          "handlers":[
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "result",
        "condition": [],
        "func": "==",
        "value_right": "success"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "code",
        "condition": [],
        "func": "==",
        "value_right": 200
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "infos",
        "condition": [],
        "func": "==",
        "value_right": "成功"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.isRemoved",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.version",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.orderNum",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.detailName",
        "condition": [],
        "func": "==",
        "value_right": "*生活服务*劳务派遣服务费"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.standard",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.price",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.num",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.unit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.taxAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.12
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.sumAmount",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.taxRate",
        "condition": [],
        "func": "==",
        "value_right": "0.13"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.parentCode",
        "condition": [],
        "func": "==",
        "value_right": "3079900000000000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.isVoided",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.discountType",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.preferentialFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.freeTax",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.vatSpecialManagement",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.taxFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.splitItem",
        "condition": [],
        "func": "==",
        "value_right": false
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.priceExcludeTax",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    }
  ]
        },
        {
          "name": "前台-根据查询的INVOICE_ID，进行发票开具接口；",
          "desc": "",
          "type": "request",
          "params": {
            "name": "前台-开具发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/invoiceStay/stayInvoicePro",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "ids": "{{INVOICE_ID}}"
            }
          },
          "handlers": []
        },
        {
          "name": "数据库查询开具发票接口，确定字段信息，并验证有效字段；",
          "desc": "",
          "type": "plugIn",
          "params": {
            "params": {
              "host": "192.168.2.65",
              "user": "user1",
              "password": "123456",
              "db_name": "inv_xx",
              "SQL": "select * from xx_sop_task_log where task_name = 1 and task_type = 1 and data_id = '{{INVOICE_ID}}';",
              "port": 5432,
              "field_list": [
                {
                  "field": "response",
                  "row": 0,
                  "col": 5
                }
              ]
            },
            "type": "pg_db"
          },
          "handlers":[
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fplx",
        "condition": [],
        "func": "==",
        "value_right": "05"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "getResultMethod",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "gmfdz",
        "condition": [],
        "func": "==",
        "value_right": "南京市雨花台区软件大道66号华通科技园406室010-88233550"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "gmfkhh",
        "condition": [],
        "func": "==",
        "value_right": "招商银行股份有限公司南京雨花支行"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "gmfmc",
        "condition": [],
        "func": "==",
        "value_right": "全电电专-普通征税-含税"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "gmfnsrsbh",
        "condition": [],
        "func": "==",
        "value_right": "123456787654111"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "gmfzh",
        "condition": [],
        "func": "==",
        "value_right": "125914056010701"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "hjje",
        "condition": [],
        "func": "==",
        "value_right": "0.88"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "hjse",
        "condition": [],
        "func": "==",
        "value_right": "0.12"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "hzqrxxdbh",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "jshj",
        "condition": [],
        "func": "==",
        "value_right": "1.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "kpr",
        "condition": [],
        "func": "==",
        "value_right": "admin"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "lzfpbz",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "naturalPersonFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "qyDm",
        "condition": [],
        "func": "==",
        "value_right": "50"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "sgfplxDm",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "tdys",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfdh",
        "condition": [],
        "func": "==",
        "value_right": "027-65022526"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfdz",
        "condition": [],
        "func": "==",
        "value_right": "武汉市东西湖区新沟镇油纱路73号1栋"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfkhh",
        "condition": [],
        "func": "==",
        "value_right": "中国光大银行武汉分行营业部"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfkhhyhzh",
        "condition": [],
        "func": "==",
        "value_right": "38310188000444553"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfmc",
        "condition": [],
        "func": "==",
        "value_right": "500102201007206608"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfnsrsbh",
        "condition": [],
        "func": "==",
        "value_right": "500102201007206608"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfzh",
        "condition": [],
        "func": "==",
        "value_right": "38310188000444553"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.dj",
        "condition": [],
        "func": "==",
        "value_right": "0.88000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.dw",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.dylzfpmxxh",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.fphxz",
        "condition": [],
        "func": "==",
        "value_right": "00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.ggxh",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.hsje",
        "condition": [],
        "func": "==",
        "value_right": "1.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.hwhyslwfwmc",
        "condition": [],
        "func": "==",
        "value_right": "劳务派遣服务费"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.je",
        "condition": [],
        "func": "==",
        "value_right": "0.88"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.kce",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.mxxh",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.se",
        "condition": [],
        "func": "==",
        "value_right": "0.12"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.sl",
        "condition": [],
        "func": "==",
        "value_right": "1.00000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.slv",
        "condition": [],
        "func": "==",
        "value_right": "0.13"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.spfwjc",
        "condition": [],
        "func": "==",
        "value_right": "生活服务"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.sphfwssflhbbm",
        "condition": [],
        "func": "==",
        "value_right": "3079900000000000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.xmmc",
        "condition": [],
        "func": "==",
        "value_right": "*生活服务*劳务派遣服务费"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.zeroTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    }
  ]
        }
      ]
    },
    {
      "name": "开具发票流程-全电电普-差额征税-不含税",
      "desc": "导入一个带有折扣行的订单，生成预置发票，执行生成，需要审核。",
      "variable": {
      },
      "step": [
        {
          "name": "随机生成一个订单号",
          "desc": "使用随机数插件，随机生成一个订单号，存储至全局变量；",
          "type": "plugIn",
          "params": {
            "type": "random",
            "params": {
              "random_type": "STR",
              "length": 12,
              "get_field": "BILL_ID_START"
            }
          },
          "handlers": []
        },
        {
          "name": "获取订单asserts key",
          "desc": "访问asserts-key接口，并将key保留，用在之后的导入订单接口。",
          "type": "request",
          "params": {
            "name": "asserts-key接口",
            "desc": "",
            "host": "https://ddapi.bigfintax.com",
            "path": "/assembleSignatureController/get/cqbh/O7XmUkNX",
            "method": "GET",
            "post_type": "",
            "cookies": {},
            "response_type": "text",
            "data": {}
          },
          "handlers": [
            {
              "type": "extract",
              "params": {
                "field": "ASSERT_KEY",
                "type": "text",
                "path": "",
                "condition": []
              }
            }
          ]
        },
        {
          "name": "导入一条订单",
          "desc": "进行订单导入。",
          "type": "request",
          "sleep": 10,
          "params": {
            "name": "导入接口",
            "desc": "",
            "host": "https://d-k8s-xxp-ports-fp.bigfintax.com",
            "path": "/inv-xx-ports/xxp/receiptDataIn?{{ASSERT_KEY}}",
            "method": "POST",
            "post_type": "json",
            "cookies": {},
            "response_type": "json",
            "data": {
              "Count": 1,
              "RequestID": "3da5aff7c6914cf399923a72330af6191",
              "Content": [
                {
                  "BillNo": "{{BILL_ID_START}}",
                  "SellerTaxNum": "500102201007206608",
                  "Seller": "500102201007206608",
                  "SellerAddress": "武汉市东西湖区新沟镇油纱路73号1栋",
                  "SellerPhone": "027-65022526",
                  "SellerBankName": "中国光大银行武汉分行营业部",
                  "SellerBankAccount": "38310188000444553",
                  "Buyer": "全电电普-差额征税-不含税",
                  "BuyerTaxNum": "123456787654111",
                  "BuyerAddress": "南京市雨花台区软件大道66号华通科技园406室",
                  "BuyerPhone": "010-88233550",
                  "BuyerBankName": "招商银行股份有限公司南京雨花支行",
                  "BuyerBankAccount": "125914056010701",
                  "Drawer": "admin",
                  "Payee": "王晗",
                  "Reviewer": "范荣峥",
                  "BillType": "1",
                  "InvoiceType": "06",
                  "TotalAmount": "1.00",
                  "InvoiceAmount": "0.88",
                  "TaxAmount": "0.12",
                  "BillDate": "20230216000000",
                  "MachineNo": "",
                  "StoreCode": "2021",
                  "SpecialInvoice": "",
                  "RedAdviceNum": "",
                  "RedConfirmNum": "",
                  "TaxMethod": "2",
                  "Items": [
                    {
                      "LineNo": "1",
                      "DetailName": "劳务派遣服务费",
                      "Unit": "升",
                      "Standard": "",
                      "Num": "1",
                      "TaxFlag": "0",
                      "Price": "1",
                      "InvoiceAmount": "0.88",
                      "SumAmount": "1.00",
                      "TaxRate": "0.13",
                      "TaxAmount": "0.12",
                      "DiscountType": "0",
                      "ParentCode": "3079900000000000000",
                      "FreeTax": "",
                      "VatSpecialManagement": "",
                      "DeductionAmount": "0.5"
                    }
                  ]
                }
              ]
            }
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "Code",
                "func": "==",
                "condition": [],
                "value_right": "200"
              }
            }
          ]
        },
        {
          "name": "前台-查询导入的订单数据，并提取billId",
          "desc": "",
          "type": "request",
          "params": {
            "name": "查询预制订单列表接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/bill/queryBillInfoListNew",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "page": 1,
              "per_page": 10,
              "condition": "[{\"f\":\"billNo\",\"v\":\"{{BILL_ID_START}}\",\"op\":\"eq\",\"t\":\"s\"},{\"f\":\"createDateStart\",\"v\":\"\",\"op\":\"ge\",\"t\":\"s\"},{\"f\":\"createDateEnd\",\"v\":\"\",\"op\":\"le\",\"t\":\"s\"}]"
            }
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "data.0.billNo",
                "condition": [],
                "func": "==",
                "value_right": "{{BILL_ID_START}}"
              }
            },
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "data.0.sellerTaxNo",
                "condition": [],
                "func": "==",
                "value_right": "500102201007206608"
              }
            },
            {
              "type": "extract",
              "params": {
                "type": "json",
                "path": "data.0.id",
                "condition": [],
                "field": "BILL_ID"
              }
            }
          ]
        },
        {
          "name": "前台-根据BILL_ID，生成预置发票",
          "desc": "",
          "type": "request",
          "params": {
            "name": "生成预制发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/bill/generateTemplateInvoice",
            "method": "POST",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": [{"billId":"{{BILL_ID}}"}]
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "code",
                "condition": [],
                "func": "==",
                "value_right": 200
              }
            },
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "result",
                "condition": [],
                "func": "==",
                "value_right": "success"
              }
            }
          ]
        },
        {
          "name": "前台-根据订单编号，查询待开发票管理页面，并提取INVOICE_ID；",
          "desc": "",
          "type": "request",
          "params": {
            "name": "查询待开发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/InvoicequeryPage",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "page": 1,
              "per_page": 10,
              "pageFlag": 3,
              "condition": "[{\"f\":\"contraceNo\",\"v\":\"{{BILL_ID_START}}\",\"op\":\"eq\",\"t\":\"s\"}]"
            }
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "code",
                "condition": [],
                "func": "==",
                "value_right": 200
              }
            },
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "result",
                "condition": [],
                "func": "==",
                "value_right": "success"
              }
            },
            {
              "type": "extract",
              "params": {
                "type": "json",
                "path": "data.0.strId",
                "condition": [],
                "field": "INVOICE_ID"
              }
            }
          ]
        },
        {
          "name": "前台-查看待开发票明细；",
          "desc": "",
          "type": "request",
          "params": {
            "name": "查询待开发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/invoiceStay/queryInvoiceItem",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "invoiceId": "{{INVOICE_ID}}"
            }
          },
          "handlers": [
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "result",
        "condition": [],
        "func": "==",
        "value_right": "success"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "code",
        "condition": [],
        "func": "==",
        "value_right": 200
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "infos",
        "condition": [],
        "func": "==",
        "value_right": "成功"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.isRemoved",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.version",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.orderNum",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.detailName",
        "condition": [],
        "func": "==",
        "value_right": "*生活服务*劳务派遣服务费"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.standard",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.price",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.num",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.unit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.taxAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.12
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.sumAmount",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.taxRate",
        "condition": [],
        "func": "==",
        "value_right": "0.13"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.parentCode",
        "condition": [],
        "func": "==",
        "value_right": "3079900000000000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.isVoided",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.discountType",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.preferentialFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.freeTax",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.vatSpecialManagement",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.taxFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.deductionAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.5
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.splitItem",
        "condition": [],
        "func": "==",
        "value_right": false
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.priceExcludeTax",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    }
  ]
        },
        {
          "name": "前台-根据查询的INVOICE_ID，进行发票开具接口；",
          "desc": "",
          "type": "request",
          "params": {
            "name": "前台-开具发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/invoiceStay/stayInvoicePro",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "ids": "{{INVOICE_ID}}"
            }
          },
          "handlers": []
        },
        {
          "name": "数据库查询开具发票接口，确定字段信息，并验证有效字段；",
          "desc": "",
          "type": "plugIn",
          "params": {
            "params": {
              "host": "192.168.2.65",
              "user": "user1",
              "password": "123456",
              "db_name": "inv_xx",
              "SQL": "select * from xx_sop_task_log where task_name = 1 and task_type = 1 and data_id = '{{INVOICE_ID}}';",
              "port": 5432,
              "field_list": [
                {
                  "field": "response",
                  "row": 0,
                  "col": 5
                }
              ]
            },
            "type": "pg_db"
          },
          "handlers":[
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "cezslxDm",
        "condition": [],
        "func": "==",
        "value_right": "01"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fplx",
        "condition": [],
        "func": "==",
        "value_right": "06"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "getResultMethod",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "gmfdz",
        "condition": [],
        "func": "==",
        "value_right": "南京市雨花台区软件大道66号华通科技园406室010-88233550"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "gmfkhh",
        "condition": [],
        "func": "==",
        "value_right": "招商银行股份有限公司南京雨花支行"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "gmfmc",
        "condition": [],
        "func": "==",
        "value_right": "全电电普-差额征税-不含税"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "gmfnsrsbh",
        "condition": [],
        "func": "==",
        "value_right": "123456787654111"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "gmfzh",
        "condition": [],
        "func": "==",
        "value_right": "125914056010701"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "hjje",
        "condition": [],
        "func": "==",
        "value_right": "0.88"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "hjse",
        "condition": [],
        "func": "==",
        "value_right": "0.12"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "hzqrxxdbh",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "jshj",
        "condition": [],
        "func": "==",
        "value_right": "1.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "kpr",
        "condition": [],
        "func": "==",
        "value_right": "admin"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "lzfpbz",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "naturalPersonFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "qyDm",
        "condition": [],
        "func": "==",
        "value_right": "50"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "sgfplxDm",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "tdys",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfdh",
        "condition": [],
        "func": "==",
        "value_right": "027-65022526"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfdz",
        "condition": [],
        "func": "==",
        "value_right": "武汉市东西湖区新沟镇油纱路73号1栋"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfkhh",
        "condition": [],
        "func": "==",
        "value_right": "中国光大银行武汉分行营业部"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfkhhyhzh",
        "condition": [],
        "func": "==",
        "value_right": "38310188000444553"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfmc",
        "condition": [],
        "func": "==",
        "value_right": "500102201007206608"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfnsrsbh",
        "condition": [],
        "func": "==",
        "value_right": "500102201007206608"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfzh",
        "condition": [],
        "func": "==",
        "value_right": "38310188000444553"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.dj",
        "condition": [],
        "func": "==",
        "value_right": "0.88000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.dw",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.dylzfpmxxh",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.fphxz",
        "condition": [],
        "func": "==",
        "value_right": "00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.ggxh",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.hsje",
        "condition": [],
        "func": "==",
        "value_right": "1.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.hwhyslwfwmc",
        "condition": [],
        "func": "==",
        "value_right": "劳务派遣服务费"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.je",
        "condition": [],
        "func": "==",
        "value_right": "0.88"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.kce",
        "condition": [],
        "func": "==",
        "value_right": "0.50"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.mxxh",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.se",
        "condition": [],
        "func": "==",
        "value_right": "0.12"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.sl",
        "condition": [],
        "func": "==",
        "value_right": "1.00000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.slv",
        "condition": [],
        "func": "==",
        "value_right": "0.13"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.spfwjc",
        "condition": [],
        "func": "==",
        "value_right": "生活服务"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.sphfwssflhbbm",
        "condition": [],
        "func": "==",
        "value_right": "3079900000000000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.xmmc",
        "condition": [],
        "func": "==",
        "value_right": "*生活服务*劳务派遣服务费"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.zeroTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    }
  ]
        }
      ]
    },
    {
      "name": "开具发票流程-全电电普-清单票",
      "desc": "导入一个带有折扣行的订单，生成预置发票，执行生成，需要审核。",
      "variable": {
      },
      "step": [
        {
          "name": "随机生成一个订单号",
          "desc": "使用随机数插件，随机生成一个订单号，存储至全局变量；",
          "type": "plugIn",
          "params": {
            "type": "random",
            "params": {
              "random_type": "STR",
              "length": 12,
              "get_field": "BILL_ID_START"
            }
          },
          "handlers": []
        },
        {
          "name": "获取订单asserts key",
          "desc": "访问asserts-key接口，并将key保留，用在之后的导入订单接口。",
          "type": "request",
          "params": {
            "name": "asserts-key接口",
            "desc": "",
            "host": "https://ddapi.bigfintax.com",
            "path": "/assembleSignatureController/get/cqbh/O7XmUkNX",
            "method": "GET",
            "post_type": "",
            "cookies": {},
            "response_type": "text",
            "data": {}
          },
          "handlers": [
            {
              "type": "extract",
              "params": {
                "field": "ASSERT_KEY",
                "type": "text",
                "path": "",
                "condition": []
              }
            }
          ]
        },
        {
          "name": "导入一条订单",
          "desc": "进行订单导入。",
          "type": "request",
          "sleep": 10,
          "params": {
            "name": "导入接口",
            "desc": "",
            "host": "https://d-k8s-xxp-ports-fp.bigfintax.com",
            "path": "/inv-xx-ports/xxp/receiptDataIn?{{ASSERT_KEY}}",
            "method": "POST",
            "post_type": "json",
            "cookies": {},
            "response_type": "json",
            "data": {
              "Count": 1,
              "RequestID": "3da5aff7c6914cf399923a72330af6191",
              "Content": [
                {
                  "BillNo": "{{BILL_ID_START}}",
                  "SellerTaxNum": "500102201007206608",
                  "Seller": "500102201007206608",
                  "SellerAddress": "武汉市东西湖区新沟镇油纱路73号1栋",
                  "SellerPhone": "027-65022526",
                  "SellerBankName": "中国光大银行武汉分行营业部",
                  "SellerBankAccount": "38310188000444553",
                  "Buyer": "全电电普-清单票",
                  "BuyerTaxNum": "91320114MA27H4CC5G",
                  "BuyerAddress": "南京市雨花台区软件大道66号华通科技园406室",
                  "BuyerPhone": "010-88233550",
                  "BuyerBankName": "招商银行股份有限公司南京雨花支行",
                  "BuyerBankAccount": "125914056010701",
                  "Drawer": "admin",
                  "Payee": "王晗",
                  "Reviewer": "范荣峥",
                  "BillType": "1",
                  "InvoiceType": "10",
                  "TotalAmount": "1.00",
                  "InvoiceAmount": "0.88",
                  "TaxAmount": "0.12",
                  "BillDate": "20230216000000",
                  "MachineNo": "",
                  "SpecialInvoice": 1,
                  "StoreCode": "2021",
                  "RedAdviceNum": "",
                  "RedConfirmNum": "",
                  "Items": [
                    {
                      "LineNo": "1",
                      "DetailName": "舒客小苏打牙膏洁白护龈清爽柠檬",
                      "Unit": "升",
                      "Standard": "",
                      "Num": "1",
                      "TaxFlag": "0",
                      "Price": "1",
                      "InvoiceAmount": "0.88",
                      "SumAmount": "0.88",
                      "TaxRate": "0",
                      "TaxAmount": "0",
                      "DiscountType": "0",
                      "ParentCode": "1070101070100000000",
                      "FreeTax": "3",
                      "VatSpecialManagement": ""
                    },
                    {
                      "LineNo": "2",
                      "DetailName": "舒客小苏打牙膏洁白护龈清爽柠檬",
                      "Unit": "升",
                      "Standard": "",
                      "Num": "1",
                      "TaxFlag": "0",
                      "Price": "1",
                      "InvoiceAmount": "0.88",
                      "SumAmount": "0.88",
                      "TaxRate": "0",
                      "TaxAmount": "0",
                      "DiscountType": "0",
                      "ParentCode": "1070101070100000000",
                      "FreeTax": "3",
                      "VatSpecialManagement": ""
                    },
                    {
                      "LineNo": "3",
                      "DetailName": "舒客小苏打牙膏洁白护龈清爽柠檬",
                      "Unit": "升",
                      "Standard": "",
                      "Num": "1",
                      "TaxFlag": "0",
                      "Price": "1",
                      "InvoiceAmount": "0.88",
                      "SumAmount": "0.88",
                      "TaxRate": "0",
                      "TaxAmount": "0",
                      "DiscountType": "0",
                      "ParentCode": "1070101070100000000",
                      "FreeTax": "3",
                      "VatSpecialManagement": ""
                    },
                    {
                      "LineNo": "4",
                      "DetailName": "舒客小苏打牙膏洁白护龈清爽柠檬",
                      "Unit": "升",
                      "Standard": "",
                      "Num": "1",
                      "TaxFlag": "0",
                      "Price": "1",
                      "InvoiceAmount": "0.88",
                      "SumAmount": "0.88",
                      "TaxRate": "0",
                      "TaxAmount": "0",
                      "DiscountType": "0",
                      "ParentCode": "1070101070100000000",
                      "FreeTax": "3",
                      "VatSpecialManagement": ""
                    },
                    {
                      "LineNo": "5",
                      "DetailName": "舒客小苏打牙膏洁白护龈清爽柠檬",
                      "Unit": "升",
                      "Standard": "",
                      "Num": "1",
                      "TaxFlag": "0",
                      "Price": "1",
                      "InvoiceAmount": "0.88",
                      "SumAmount": "0.88",
                      "TaxRate": "0",
                      "TaxAmount": "0",
                      "DiscountType": "0",
                      "ParentCode": "1070101070100000000",
                      "FreeTax": "3",
                      "VatSpecialManagement": ""
                    },
                    {
                      "LineNo": "6",
                      "DetailName": "舒客小苏打牙膏洁白护龈清爽柠檬",
                      "Unit": "升",
                      "Standard": "",
                      "Num": "1",
                      "TaxFlag": "0",
                      "Price": "1",
                      "InvoiceAmount": "0.88",
                      "SumAmount": "0.88",
                      "TaxRate": "0",
                      "TaxAmount": "0",
                      "DiscountType": "0",
                      "ParentCode": "1070101070100000000",
                      "FreeTax": "3",
                      "VatSpecialManagement": ""
                    },
                    {
                      "LineNo": "7",
                      "DetailName": "舒客小苏打牙膏洁白护龈清爽柠檬",
                      "Unit": "升",
                      "Standard": "",
                      "Num": "1",
                      "TaxFlag": "0",
                      "Price": "1",
                      "InvoiceAmount": "0.88",
                      "SumAmount": "0.88",
                      "TaxRate": "0",
                      "TaxAmount": "0",
                      "DiscountType": "0",
                      "ParentCode": "1070101070100000000",
                      "FreeTax": "1",
                      "VatSpecialManagement": ""
                    },
                    {
                      "LineNo": "8",
                      "DetailName": "舒客小苏打牙膏洁白护龈清爽柠檬",
                      "Unit": "升",
                      "Standard": "",
                      "Num": "1",
                      "TaxFlag": "0",
                      "Price": "1",
                      "InvoiceAmount": "0.88",
                      "SumAmount": "0.88",
                      "TaxRate": "0",
                      "TaxAmount": "0",
                      "DiscountType": "0",
                      "ParentCode": "1070101070100000000",
                      "FreeTax": "1",
                      "VatSpecialManagement": ""
                    },
                    {
                      "LineNo": "9",
                      "DetailName": "舒客小苏打牙膏洁白护龈清爽柠檬",
                      "Unit": "升",
                      "Standard": "",
                      "Num": "1",
                      "TaxFlag": "0",
                      "Price": "1",
                      "InvoiceAmount": "0.88",
                      "SumAmount": "0.88",
                      "TaxRate": "0",
                      "TaxAmount": "0",
                      "DiscountType": "0",
                      "ParentCode": "1070101070100000000",
                      "FreeTax": "2",
                      "VatSpecialManagement": ""
                    },
                    {
                      "LineNo": "10",
                      "DetailName": "舒客小苏打牙膏洁白护龈清爽柠檬",
                      "Unit": "升",
                      "Standard": "",
                      "Num": "1",
                      "TaxFlag": "0",
                      "Price": "1",
                      "InvoiceAmount": "0.88",
                      "SumAmount": "0.88",
                      "TaxRate": "0",
                      "TaxAmount": "0",
                      "DiscountType": "0",
                      "ParentCode": "1070101070100000000",
                      "FreeTax": "2",
                      "VatSpecialManagement": ""
                    }
                  ]
                }
              ]
            }
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "Code",
                "func": "==",
                "condition": [],
                "value_right": "200"
              }
            }
          ]
        },
        {
          "name": "前台-查询导入的订单数据，并提取billId",
          "desc": "",
          "type": "request",
          "params": {
            "name": "查询预制订单列表接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/bill/queryBillInfoListNew",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "page": 1,
              "per_page": 10,
              "condition": "[{\"f\":\"billNo\",\"v\":\"{{BILL_ID_START}}\",\"op\":\"eq\",\"t\":\"s\"},{\"f\":\"createDateStart\",\"v\":\"\",\"op\":\"ge\",\"t\":\"s\"},{\"f\":\"createDateEnd\",\"v\":\"\",\"op\":\"le\",\"t\":\"s\"}]"
            }
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "data.0.billNo",
                "condition": [],
                "func": "==",
                "value_right": "{{BILL_ID_START}}"
              }
            },
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "data.0.sellerTaxNo",
                "condition": [],
                "func": "==",
                "value_right": "500102201007206608"
              }
            },
            {
              "type": "extract",
              "params": {
                "type": "json",
                "path": "data.0.id",
                "condition": [],
                "field": "BILL_ID"
              }
            }
          ]
        },
        {
          "name": "前台-根据BILL_ID，生成预置发票",
          "desc": "",
          "type": "request",
          "params": {
            "name": "生成预制发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/bill/generateTemplateInvoice",
            "method": "POST",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": [{"billId":"{{BILL_ID}}"}]
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "code",
                "condition": [],
                "func": "==",
                "value_right": 200
              }
            },
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "result",
                "condition": [],
                "func": "==",
                "value_right": "success"
              }
            }
          ]
        },
        {
          "name": "前台-根据订单编号，查询待开发票管理页面，并提取INVOICE_ID；",
          "desc": "",
          "type": "request",
          "params": {
            "name": "查询待开发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/InvoicequeryPage",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "page": 1,
              "per_page": 10,
              "pageFlag": 3,
              "condition": "[{\"f\":\"contraceNo\",\"v\":\"{{BILL_ID_START}}\",\"op\":\"eq\",\"t\":\"s\"}]"
            }
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "code",
                "condition": [],
                "func": "==",
                "value_right": 200
              }
            },
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "result",
                "condition": [],
                "func": "==",
                "value_right": "success"
              }
            },
            {
              "type": "extract",
              "params": {
                "type": "json",
                "path": "data.0.strId",
                "condition": [],
                "field": "INVOICE_ID"
              }
            }
          ]
        },
        {
          "name": "前台-查看待开发票明细；",
          "desc": "",
          "type": "request",
          "params": {
            "name": "查询待开发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/invoiceStay/queryInvoiceItem",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "invoiceId": "{{INVOICE_ID}}"
            }
          },
          "handlers": [
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "result",
        "condition": [],
        "func": "==",
        "value_right": "success"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "code",
        "condition": [],
        "func": "==",
        "value_right": 200
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "infos",
        "condition": [],
        "func": "==",
        "value_right": "成功"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.isRemoved",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.version",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.orderNum",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.detailName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*舒客小苏打牙膏洁白护龈清爽柠檬"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.standard",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.price",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.num",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.unit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.taxAmount",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.sumAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.taxRate",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.parentCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.isVoided",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.discountType",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.preferentialFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.freeTax",
        "condition": [],
        "func": "==",
        "value_right": "3"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.vatSpecialManagement",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.taxFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.splitItem",
        "condition": [],
        "func": "==",
        "value_right": false
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.priceExcludeTax",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.isRemoved",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.version",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.orderNum",
        "condition": [],
        "func": "==",
        "value_right": 2
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.detailName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*舒客小苏打牙膏洁白护龈清爽柠檬"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.standard",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.price",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.num",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.unit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.taxAmount",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.sumAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.taxRate",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.parentCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.isVoided",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.discountType",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.preferentialFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.freeTax",
        "condition": [],
        "func": "==",
        "value_right": "3"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.vatSpecialManagement",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.taxFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.splitItem",
        "condition": [],
        "func": "==",
        "value_right": false
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.priceExcludeTax",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.isRemoved",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.version",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.orderNum",
        "condition": [],
        "func": "==",
        "value_right": 3
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.detailName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*舒客小苏打牙膏洁白护龈清爽柠檬"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.standard",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.price",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.num",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.unit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.taxAmount",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.sumAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.taxRate",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.parentCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.isVoided",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.discountType",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.preferentialFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.freeTax",
        "condition": [],
        "func": "==",
        "value_right": "3"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.vatSpecialManagement",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.taxFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.splitItem",
        "condition": [],
        "func": "==",
        "value_right": false
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.priceExcludeTax",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.isRemoved",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.version",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.orderNum",
        "condition": [],
        "func": "==",
        "value_right": 4
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.detailName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*舒客小苏打牙膏洁白护龈清爽柠檬"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.standard",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.price",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.num",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.unit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.taxAmount",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.sumAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.taxRate",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.parentCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.isVoided",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.discountType",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.preferentialFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.freeTax",
        "condition": [],
        "func": "==",
        "value_right": "3"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.vatSpecialManagement",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.taxFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.splitItem",
        "condition": [],
        "func": "==",
        "value_right": false
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.3.priceExcludeTax",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.isRemoved",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.version",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.orderNum",
        "condition": [],
        "func": "==",
        "value_right": 5
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.detailName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*舒客小苏打牙膏洁白护龈清爽柠檬"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.standard",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.price",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.num",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.unit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.taxAmount",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.sumAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.taxRate",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.parentCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.isVoided",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.discountType",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.preferentialFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.freeTax",
        "condition": [],
        "func": "==",
        "value_right": "3"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.vatSpecialManagement",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.taxFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.splitItem",
        "condition": [],
        "func": "==",
        "value_right": false
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.4.priceExcludeTax",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.isRemoved",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.version",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.orderNum",
        "condition": [],
        "func": "==",
        "value_right": 6
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.detailName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*舒客小苏打牙膏洁白护龈清爽柠檬"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.standard",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.price",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.num",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.unit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.taxAmount",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.sumAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.taxRate",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.parentCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.isVoided",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.discountType",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.preferentialFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.freeTax",
        "condition": [],
        "func": "==",
        "value_right": "3"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.vatSpecialManagement",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.taxFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.splitItem",
        "condition": [],
        "func": "==",
        "value_right": false
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.5.priceExcludeTax",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.isRemoved",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.version",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.orderNum",
        "condition": [],
        "func": "==",
        "value_right": 7
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.detailName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*舒客小苏打牙膏洁白护龈清爽柠檬"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.standard",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.price",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.num",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.unit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.taxAmount",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.sumAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.taxRate",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.parentCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.isVoided",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.discountType",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.preferentialFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.freeTax",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.vatSpecialManagement",
        "condition": [],
        "func": "==",
        "value_right": "免税"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.taxFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.splitItem",
        "condition": [],
        "func": "==",
        "value_right": false
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.6.priceExcludeTax",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.9.taxAmount",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.9.sumAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.9.taxRate",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.9.parentCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.9.isVoided",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.9.discountType",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.9.preferentialFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.9.freeTax",
        "condition": [],
        "func": "==",
        "value_right": "2"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.9.vatSpecialManagement",
        "condition": [],
        "func": "==",
        "value_right": "不征收"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.9.taxFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.9.splitItem",
        "condition": [],
        "func": "==",
        "value_right": false
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.9.priceExcludeTax",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    }
  ]
        },
        {
          "name": "前台-根据查询的INVOICE_ID，进行发票开具接口；",
          "desc": "",
          "type": "request",
          "params": {
            "name": "前台-开具发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/invoiceStay/stayInvoicePro",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "ids": "{{INVOICE_ID}}"
            }
          },
          "handlers": []
        },
        {
          "name": "数据库查询开具发票接口，确定字段信息，并验证有效字段；",
          "desc": "",
          "type": "plugIn",
          "params": {
            "params": {
              "host": "192.168.2.65",
              "user": "user1",
              "password": "123456",
              "db_name": "inv_xx",
              "SQL": "select * from xx_invoice_json_log where invoice_id = '{{INVOICE_ID}}'",
              "port": 5432,
              "field_list": [
                {
                  "field": "response",
                  "row": 0,
                  "col": 4
                }
              ]
            },
            "type": "pg_db"
          },
          "handlers":[
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "casherName",
        "condition": [],
        "func": "==",
        "value_right": "王晗"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "machineCode",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "tradeNo",
        "condition": [],
        "func": "==",
        "value_right": "{{BILL_ID_START}}"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "buyerBankAccount",
        "condition": [],
        "func": "==",
        "value_right": "125914056010701"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "sellerAddress",
        "condition": [],
        "func": "==",
        "value_right": "武汉市东西湖区新沟镇油纱路73号1栋"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "buyerName",
        "condition": [],
        "func": "==",
        "value_right": "全电电普-清单票"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "buyerAddress",
        "condition": [],
        "func": "==",
        "value_right": "南京市雨花台区软件大道66号华通科技园406室010-88233550"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "reviewerName",
        "condition": [],
        "func": "==",
        "value_right": "范荣峥"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "invoiceReqSerialNo",
        "condition": [],
        "func": "!=",
        "value_right": null
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "buyerBankName",
        "condition": [],
        "func": "==",
        "value_right": "招商银行股份有限公司南京雨花支行"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "sellerBankAccount",
        "condition": [],
        "func": "==",
        "value_right": "38310188000444553"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "buyerTaxpayerNum",
        "condition": [],
        "func": "==",
        "value_right": "91320114MA27H4CC5G"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "sellerTel",
        "condition": [],
        "func": "==",
        "value_right": "027-65022526"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "drawerName",
        "condition": [],
        "func": "==",
        "value_right": "admin"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.unitPrice",
        "condition": [],
        "func": "==",
        "value_right": "0.88000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.taxRateAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.taxRateValue",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.specificationModel",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.quantity",
        "condition": [],
        "func": "==",
        "value_right": "1.00000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.taxClassificationCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.88"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.includeTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.goodsName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*舒客小苏打牙膏洁白护龈清爽柠檬"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.meteringUnit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.zeroTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "3"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.unitPrice",
        "condition": [],
        "func": "==",
        "value_right": "0.88000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.taxRateAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.taxRateValue",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.specificationModel",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.quantity",
        "condition": [],
        "func": "==",
        "value_right": "1.00000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.taxClassificationCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.88"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.includeTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.goodsName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*舒客小苏打牙膏洁白护龈清爽柠檬"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.meteringUnit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.zeroTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "3"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.2.unitPrice",
        "condition": [],
        "func": "==",
        "value_right": "0.88000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.2.taxRateAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.2.taxRateValue",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.2.specificationModel",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.2.quantity",
        "condition": [],
        "func": "==",
        "value_right": "1.00000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.2.taxClassificationCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.2.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.88"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.2.includeTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.2.goodsName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*舒客小苏打牙膏洁白护龈清爽柠檬"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.2.meteringUnit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.2.zeroTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "3"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.3.unitPrice",
        "condition": [],
        "func": "==",
        "value_right": "0.88000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.3.taxRateAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.3.taxRateValue",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.3.specificationModel",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.3.quantity",
        "condition": [],
        "func": "==",
        "value_right": "1.00000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.3.taxClassificationCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.3.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.88"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.3.includeTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.3.goodsName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*舒客小苏打牙膏洁白护龈清爽柠檬"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.3.meteringUnit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.3.zeroTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "3"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.4.unitPrice",
        "condition": [],
        "func": "==",
        "value_right": "0.88000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.4.taxRateAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.4.taxRateValue",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.4.specificationModel",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.4.quantity",
        "condition": [],
        "func": "==",
        "value_right": "1.00000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.4.taxClassificationCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.4.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.88"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.4.includeTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.4.goodsName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*舒客小苏打牙膏洁白护龈清爽柠檬"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.4.meteringUnit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.4.zeroTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "3"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.5.unitPrice",
        "condition": [],
        "func": "==",
        "value_right": "0.88000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.5.taxRateAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.5.taxRateValue",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.5.specificationModel",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.5.quantity",
        "condition": [],
        "func": "==",
        "value_right": "1.00000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.5.taxClassificationCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.5.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.88"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.5.includeTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.5.goodsName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*舒客小苏打牙膏洁白护龈清爽柠檬"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.5.meteringUnit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.5.zeroTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "3"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.6.unitPrice",
        "condition": [],
        "func": "==",
        "value_right": "0.88000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.6.taxRateValue",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.6.specificationModel",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.6.quantity",
        "condition": [],
        "func": "==",
        "value_right": "1.00000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.6.preferentialPolicyFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.6.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.88"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.6.includeTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.6.zeroTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.6.taxRateAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.6.vatSpecialManage",
        "condition": [],
        "func": "==",
        "value_right": "免税"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.6.taxClassificationCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.6.goodsName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*舒客小苏打牙膏洁白护龈清爽柠檬"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.6.meteringUnit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.7.unitPrice",
        "condition": [],
        "func": "==",
        "value_right": "0.88000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.7.taxRateValue",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.7.specificationModel",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.7.quantity",
        "condition": [],
        "func": "==",
        "value_right": "1.00000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.7.preferentialPolicyFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.7.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.88"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.7.includeTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.7.zeroTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.7.taxRateAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.7.vatSpecialManage",
        "condition": [],
        "func": "==",
        "value_right": "免税"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.7.taxClassificationCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.7.goodsName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*舒客小苏打牙膏洁白护龈清爽柠檬"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.7.meteringUnit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.8.unitPrice",
        "condition": [],
        "func": "==",
        "value_right": "0.88000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.8.taxRateValue",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.8.specificationModel",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.8.quantity",
        "condition": [],
        "func": "==",
        "value_right": "1.00000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.8.preferentialPolicyFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.8.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.88"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.8.includeTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.8.zeroTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "2"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.8.taxRateAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.8.vatSpecialManage",
        "condition": [],
        "func": "==",
        "value_right": "不征税"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.8.taxClassificationCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.8.goodsName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*舒客小苏打牙膏洁白护龈清爽柠檬"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.8.meteringUnit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.9.unitPrice",
        "condition": [],
        "func": "==",
        "value_right": "0.88000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.9.taxRateValue",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.9.specificationModel",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.9.quantity",
        "condition": [],
        "func": "==",
        "value_right": "1.00000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.9.preferentialPolicyFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.9.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.88"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.9.includeTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.9.zeroTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "2"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.9.taxRateAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.9.vatSpecialManage",
        "condition": [],
        "func": "==",
        "value_right": "不征税"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.9.taxClassificationCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.9.goodsName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*舒客小苏打牙膏洁白护龈清爽柠檬"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.9.meteringUnit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "taxpayerNum",
        "condition": [],
        "func": "==",
        "value_right": "500102201007206608"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "extensionNum",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "sellerBankName",
        "condition": [],
        "func": "==",
        "value_right": "中国光大银行武汉分行营业部"
      }
    }
  ]
        }
      ]
    },
    {
      "name": "开具发票流程-成品油",
      "desc": "导入一个带有折扣行的订单，生成预置发票，执行生成，需要审核。",
      "variable": {
      },
      "step": [
        {
          "name": "随机生成一个订单号",
          "desc": "使用随机数插件，随机生成一个订单号，存储至全局变量；",
          "type": "plugIn",
          "params": {
            "type": "random",
            "params": {
              "random_type": "STR",
              "length": 12,
              "get_field": "BILL_ID_START"
            }
          },
          "handlers": []
        },
        {
          "name": "获取订单asserts key",
          "desc": "访问asserts-key接口，并将key保留，用在之后的导入订单接口。",
          "type": "request",
          "params": {
            "name": "asserts-key接口",
            "desc": "",
            "host": "https://ddapi.bigfintax.com",
            "path": "/assembleSignatureController/get/cqbh/O7XmUkNX",
            "method": "GET",
            "post_type": "",
            "cookies": {},
            "response_type": "text",
            "data": {}
          },
          "handlers": [
            {
              "type": "extract",
              "params": {
                "field": "ASSERT_KEY",
                "type": "text",
                "path": "",
                "condition": []
              }
            }
          ]
        },
        {
          "name": "导入一条订单",
          "desc": "进行订单导入。",
          "type": "request",
          "sleep": 10,
          "params": {
            "name": "导入接口",
            "desc": "",
            "host": "https://d-k8s-xxp-ports-fp.bigfintax.com",
            "path": "/inv-xx-ports/xxp/receiptDataIn?{{ASSERT_KEY}}",
            "method": "POST",
            "post_type": "json",
            "cookies": {},
            "response_type": "json",
            "data": {
              "Count": 1,
              "RequestID": "3da5aff7c6914cf399923a72330af6191",
              "Content": [
                {
                  "BillNo": "{{BILL_ID_START}}",
                  "SellerTaxNum": "500102201007206608",
                  "Seller": "500102201007206608",
                  "SellerAddress": "武汉市东西湖区新沟镇油纱路73号1栋",
                  "SellerPhone": "027-65022526",
                  "SellerBankName": "中国光大银行武汉分行营业部",
                  "SellerBankAccount": "38310188000444553",
                  "Buyer": "成品油",
                  "BuyerTaxNum": "91320114MA27H4CC5G",
                  "BuyerAddress": "",
                  "BuyerPhone": "",
                  "BuyerBankName": "",
                  "BuyerBankAccount": "",
                  "Drawer": "1",
                  "Payee": "",
                  "Reviewer": "",
                  "BillType": "1",
                  "InvoiceType": "06",
                  "TotalAmount": "1.00",
                  "InvoiceAmount": "0.88",
                  "TaxAmount": "0.12",
                  "BillDate": "20230216000000",
                  "MachineNo": "",
                  "StoreCode": "2021",
                  "SpecialInvoice": "",
                  "RedAdviceNum": "",
                  "RedConfirmNum": "",
                  "Items": [
                    {
                      "LineNo": "",
                      "DetailName": "1626136590057271298",
                      "Unit": "升",
                      "Standard": "",
                      "Num": "1",
                      "TaxFlag": "0",
                      "Price": "1",
                      "InvoiceAmount": "0.88",
                      "SumAmount": "1.00",
                      "TaxRate": "0.13",
                      "TaxAmount": "0.12",
                      "DiscountType": "0",
                      "ParentCode": "1070101070100000000",
                      "FreeTax": "",
                      "VatSpecialManagement": ""
                    }
                  ]
                }
              ]
            }
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "Code",
                "func": "==",
                "condition": [],
                "value_right": "200"
              }
            }
          ]
        },
        {
          "name": "前台-查询导入的订单数据，并提取billId",
          "desc": "",
          "type": "request",
          "params": {
            "name": "查询预制订单列表接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/bill/queryBillInfoListNew",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "page": 1,
              "per_page": 10,
              "condition": "[{\"f\":\"billNo\",\"v\":\"{{BILL_ID_START}}\",\"op\":\"eq\",\"t\":\"s\"},{\"f\":\"createDateStart\",\"v\":\"\",\"op\":\"ge\",\"t\":\"s\"},{\"f\":\"createDateEnd\",\"v\":\"\",\"op\":\"le\",\"t\":\"s\"}]"
            }
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "data.0.billNo",
                "condition": [],
                "func": "==",
                "value_right": "{{BILL_ID_START}}"
              }
            },
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "data.0.sellerTaxNo",
                "condition": [],
                "func": "==",
                "value_right": "500102201007206608"
              }
            },
            {
              "type": "extract",
              "params": {
                "type": "json",
                "path": "data.0.id",
                "condition": [],
                "field": "BILL_ID"
              }
            }
          ]
        },
        {
          "name": "前台-根据BILL_ID，生成预置发票",
          "desc": "",
          "type": "request",
          "params": {
            "name": "生成预制发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/bill/generateTemplateInvoice",
            "method": "POST",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": [{"billId":"{{BILL_ID}}"}]
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "code",
                "condition": [],
                "func": "==",
                "value_right": 200
              }
            },
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "result",
                "condition": [],
                "func": "==",
                "value_right": "success"
              }
            }
          ]
        },
        {
          "name": "前台-根据订单编号，查询待开发票管理页面，并提取INVOICE_ID；",
          "desc": "",
          "type": "request",
          "params": {
            "name": "查询待开发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/InvoicequeryPage",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "page": 1,
              "per_page": 10,
              "pageFlag": 3,
              "condition": "[{\"f\":\"contraceNo\",\"v\":\"{{BILL_ID_START}}\",\"op\":\"eq\",\"t\":\"s\"}]"
            }
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "code",
                "condition": [],
                "func": "==",
                "value_right": 200
              }
            },
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "result",
                "condition": [],
                "func": "==",
                "value_right": "success"
              }
            },
            {
              "type": "extract",
              "params": {
                "type": "json",
                "path": "data.0.strId",
                "condition": [],
                "field": "INVOICE_ID"
              }
            }
          ]
        },
        {
          "name": "前台-查看待开发票明细；",
          "desc": "",
          "type": "request",
          "params": {
            "name": "查询待开发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/invoiceStay/queryInvoiceItem",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "invoiceId": "{{INVOICE_ID}}"
            }
          },
          "handlers": [
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "result",
        "condition": [],
        "func": "==",
        "value_right": "success"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "code",
        "condition": [],
        "func": "==",
        "value_right": 200
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "infos",
        "condition": [],
        "func": "==",
        "value_right": "成功"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.isRemoved",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.version",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.orderNum",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.detailName",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*1626136590057271298"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.standard",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.price",
        "condition": [],
        "func": "==",
        "value_right": 0.88495575
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.num",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.unit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.taxAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.12
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.sumAmount",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.taxRate",
        "condition": [],
        "func": "==",
        "value_right": "0.13"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.parentCode",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.isVoided",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.discountType",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.preferentialFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.freeTax",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.vatSpecialManagement",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.taxFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.splitItem",
        "condition": [],
        "func": "==",
        "value_right": false
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.priceExcludeTax",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    }
  ]
        },
        {
          "name": "前台-根据查询的INVOICE_ID，进行发票开具接口；",
          "desc": "",
          "type": "request",
          "params": {
            "name": "前台-开具发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/invoiceStay/stayInvoicePro",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "ids": "{{INVOICE_ID}}"
            }
          },
          "handlers": []
        },
        {
          "name": "数据库查询开具发票接口，确定字段信息，并验证有效字段；",
          "desc": "",
          "type": "plugIn",
          "params": {
            "params": {
              "host": "192.168.2.65",
              "user": "user1",
              "password": "123456",
              "db_name": "inv_xx",
              "SQL": "select * from xx_sop_task_log where task_name = 1 and task_type = 1 and data_id = '{{INVOICE_ID}}';",
              "port": 5432,
              "field_list": [
                {
                  "field": "response",
                  "row": 0,
                  "col": 5
                }
              ]
            },
            "type": "pg_db"
          },
          "handlers":[
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fplx",
        "condition": [],
        "func": "==",
        "value_right": "06"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "getResultMethod",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "gmfmc",
        "condition": [],
        "func": "==",
        "value_right": "成品油"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "gmfnsrsbh",
        "condition": [],
        "func": "==",
        "value_right": "91320114MA27H4CC5G"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "hjje",
        "condition": [],
        "func": "==",
        "value_right": "0.88"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "hjse",
        "condition": [],
        "func": "==",
        "value_right": "0.12"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "hzqrxxdbh",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "jshj",
        "condition": [],
        "func": "==",
        "value_right": "1.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "kpr",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "lzfpbz",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "naturalPersonFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "qyDm",
        "condition": [],
        "func": "==",
        "value_right": "50"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "sgfplxDm",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "tdys",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfdh",
        "condition": [],
        "func": "==",
        "value_right": "027-65022526"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfdz",
        "condition": [],
        "func": "==",
        "value_right": "武汉市东西湖区新沟镇油纱路73号1栋"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfkhh",
        "condition": [],
        "func": "==",
        "value_right": "中国光大银行武汉分行营业部"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfkhhyhzh",
        "condition": [],
        "func": "==",
        "value_right": "38310188000444553"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfmc",
        "condition": [],
        "func": "==",
        "value_right": "500102201007206608"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfnsrsbh",
        "condition": [],
        "func": "==",
        "value_right": "500102201007206608"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "xsfzh",
        "condition": [],
        "func": "==",
        "value_right": "38310188000444553"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.dj",
        "condition": [],
        "func": "==",
        "value_right": "0.88495575"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.dw",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.dylzfpmxxh",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.fphxz",
        "condition": [],
        "func": "==",
        "value_right": "00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.ggxh",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.hsje",
        "condition": [],
        "func": "==",
        "value_right": "1.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.hwhyslwfwmc",
        "condition": [],
        "func": "==",
        "value_right": "1626136590057271298"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.je",
        "condition": [],
        "func": "==",
        "value_right": "0.88"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.kce",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.mxxh",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.se",
        "condition": [],
        "func": "==",
        "value_right": "0.12"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.sl",
        "condition": [],
        "func": "==",
        "value_right": "1.00000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.slv",
        "condition": [],
        "func": "==",
        "value_right": "0.13"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.spfwjc",
        "condition": [],
        "func": "==",
        "value_right": "润滑油"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.sphfwssflhbbm",
        "condition": [],
        "func": "==",
        "value_right": "1070101070100000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.xmmc",
        "condition": [],
        "func": "==",
        "value_right": "*润滑油*1626136590057271298"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "fpmxList.0.zeroTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    }
  ]
        }
      ]
    },
    {
      "name": "开具发票流程-折扣行",
      "desc": "导入一个带有折扣行的订单，生成预置发票，执行生成，需要审核。",
      "variable": {
      },
      "step": [
        {
          "name": "随机生成一个订单号",
          "desc": "使用随机数插件，随机生成一个订单号，存储至全局变量；",
          "type": "plugIn",
          "params": {
            "type": "random",
            "params": {
              "random_type": "STR",
              "length": 12,
              "get_field": "BILL_ID_START"
            }
          },
          "handlers": []
        },
        {
          "name": "获取订单asserts key",
          "desc": "访问asserts-key接口，并将key保留，用在之后的导入订单接口。",
          "type": "request",
          "params": {
            "name": "asserts-key接口",
            "desc": "",
            "host": "https://ddapi.bigfintax.com",
            "path": "/assembleSignatureController/get/cqbh/O7XmUkNX",
            "method": "GET",
            "post_type": "",
            "cookies": {},
            "response_type": "text",
            "data": {}
          },
          "handlers": [
            {
              "type": "extract",
              "params": {
                "field": "ASSERT_KEY",
                "type": "text",
                "path": "",
                "condition": []
              }
            }
          ]
        },
        {
          "name": "导入一条订单",
          "desc": "进行订单导入。",
          "type": "request",
          "sleep": 10,
          "params": {
            "name": "导入接口",
            "desc": "",
            "host": "https://d-k8s-xxp-ports-fp.bigfintax.com",
            "path": "/inv-xx-ports/xxp/receiptDataIn?{{ASSERT_KEY}}",
            "method": "POST",
            "post_type": "json",
            "cookies": {},
            "response_type": "json",
            "data":{
              "Count": 1,
              "RequestID": "3da5aff7c6914cf399923a72330af6191",
              "Content": [
                {
                  "BillNo": "{{BILL_ID_START}}",
                  "SellerTaxNum": "500102201007206608",
                  "Seller": "500102201007206608",
                  "SellerAddress": "武汉市东西湖区新沟镇油纱路73号1栋",
                  "SellerPhone": "027-65022526",
                  "SellerBankName": "中国光大银行武汉分行营业部",
                  "SellerBankAccount": "38310188000444553",
                  "Buyer": "折扣行",
                  "BuyerTaxNum": "123456787654111",
                  "BuyerAddress": "南京市雨花台区软件大道66号华通科技园406室",
                  "BuyerPhone": "010-88233550",
                  "BuyerBankName": "招商银行股份有限公司南京雨花支行",
                  "BuyerBankAccount": "125914056010701",
                  "Drawer": "admin",
                  "Payee": "王晗",
                  "Reviewer": "范荣峥",
                  "BillType": "1",
                  "InvoiceType": "01",
                  "TotalAmount": "1.00",
                  "InvoiceAmount": "0.88",
                  "TaxAmount": "0.12",
                  "BillDate": "20230216000000",
                  "MachineNo": "",
                  "StoreCode": "2021",
                  "SpecialInvoice": "",
                  "RedAdviceNum": "",
                  "RedConfirmNum": "",
                  "Items": [
                    {
                      "LineNo": "1",
                      "DetailName": "劳务派遣服务费",
                      "Unit": "升",
                      "Standard": "",
                      "Num": "1",
                      "TaxFlag": "0",
                      "Price": "1",
                      "InvoiceAmount": "0.88",
                      "SumAmount": "1.00",
                      "TaxRate": "0.13",
                      "TaxAmount": "0.12",
                      "DiscountType": "2",
                      "ParentCode": "3079900000000000000",
                      "FreeTax": "",
                      "VatSpecialManagement": ""
                    },
                    {
                      "LineNo": "2",
                      "DetailName": "劳务派遣服务费",
                      "Unit": "升",
                      "Standard": "",
                      "Num": "1",
                      "TaxFlag": "0",
                      "Price": "2",
                      "InvoiceAmount": "-0.88",
                      "SumAmount": "-1.00",
                      "TaxRate": "0.13",
                      "TaxAmount": "-0.12",
                      "DiscountType": "1",
                      "ParentCode": "3079900000000000000",
                      "FreeTax": "",
                      "VatSpecialManagement": ""
                    },
                    {
                      "LineNo": "3",
                      "DetailName": "666",
                      "Unit": "升",
                      "Standard": "",
                      "Num": "1",
                      "TaxFlag": "0",
                      "Price": "2",
                      "InvoiceAmount": "0.88",
                      "SumAmount": "1.00",
                      "TaxRate": "0.13",
                      "TaxAmount": "0.12",
                      "DiscountType": "0",
                      "ParentCode": "6090000000000000000",
                      "FreeTax": "",
                      "VatSpecialManagement": ""
                    }
                  ]
                }
              ]
            }
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "Code",
                "func": "==",
                "condition": [],
                "value_right": "200"
              }
            }
          ]
        },
        {
          "name": "前台-查询导入的订单数据，并提取billId",
          "desc": "",
          "type": "request",
          "params": {
            "name": "查询预制订单列表接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/bill/queryBillInfoListNew",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "page": 1,
              "per_page": 10,
              "condition": "[{\"f\":\"billNo\",\"v\":\"{{BILL_ID_START}}\",\"op\":\"eq\",\"t\":\"s\"},{\"f\":\"createDateStart\",\"v\":\"\",\"op\":\"ge\",\"t\":\"s\"},{\"f\":\"createDateEnd\",\"v\":\"\",\"op\":\"le\",\"t\":\"s\"}]"
            }
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "data.0.billNo",
                "condition": [],
                "func": "==",
                "value_right": "{{BILL_ID_START}}"
              }
            },
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "data.0.sellerTaxNo",
                "condition": [],
                "func": "==",
                "value_right": "500102201007206608"
              }
            },
            {
              "type": "extract",
              "params": {
                "type": "json",
                "path": "data.0.id",
                "condition": [],
                "field": "BILL_ID"
              }
            }
          ]
        },
        {
          "name": "前台-根据BILL_ID，生成预置发票",
          "desc": "",
          "type": "request",
          "params": {
            "name": "生成预制发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/bill/generateTemplateInvoice",
            "method": "POST",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": [{"billId":"{{BILL_ID}}"}]
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "code",
                "condition": [],
                "func": "==",
                "value_right": 200
              }
            },
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "result",
                "condition": [],
                "func": "==",
                "value_right": "success"
              }
            }
          ]
        },
        {
          "name": "前台-根据订单编号，查询待开发票管理页面，并提取INVOICE_ID；",
          "desc": "",
          "type": "request",
          "params": {
            "name": "查询待开发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/InvoicequeryPage",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "page": 1,
              "per_page": 10,
              "pageFlag": 3,
              "condition": "[{\"f\":\"contraceNo\",\"v\":\"{{BILL_ID_START}}\",\"op\":\"eq\",\"t\":\"s\"}]"
            }
          },
          "handlers": [
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "code",
                "condition": [],
                "func": "==",
                "value_right": 200
              }
            },
            {
              "type": "ext_asserts",
              "params": {
                "type": "json",
                "path": "result",
                "condition": [],
                "func": "==",
                "value_right": "success"
              }
            },
            {
              "type": "extract",
              "params": {
                "type": "json",
                "path": "data.0.strId",
                "condition": [],
                "field": "INVOICE_ID"
              }
            }
          ]
        },
        {
          "name": "前台-查看待开发票明细；",
          "desc": "",
          "type": "request",
          "params": {
            "name": "查询待开发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/invoiceStay/queryInvoiceItem",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "invoiceId": "{{INVOICE_ID}}"
            }
          },
          "handlers":  [
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "result",
        "condition": [],
        "func": "==",
        "value_right": "success"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "code",
        "condition": [],
        "func": "==",
        "value_right": 200
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "infos",
        "condition": [],
        "func": "==",
        "value_right": "成功"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.isRemoved",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.version",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.orderNum",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.detailName",
        "condition": [],
        "func": "==",
        "value_right": "*生活服务*劳务派遣服务费"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.standard",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.price",
        "condition": [],
        "func": "==",
        "value_right": 0.88495575
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.num",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.unit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.taxAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.12
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.sumAmount",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.taxRate",
        "condition": [],
        "func": "==",
        "value_right": "0.13"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.parentCode",
        "condition": [],
        "func": "==",
        "value_right": "3079900000000000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.isVoided",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.discountType",
        "condition": [],
        "func": "==",
        "value_right": "2"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.preferentialFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.freeTax",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.vatSpecialManagement",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.taxFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.splitItem",
        "condition": [],
        "func": "==",
        "value_right": false
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.0.priceExcludeTax",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.isRemoved",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.version",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.orderNum",
        "condition": [],
        "func": "==",
        "value_right": 2
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.detailName",
        "condition": [],
        "func": "==",
        "value_right": "*生活服务*劳务派遣服务费"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.standard",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.unit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": -0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.taxAmount",
        "condition": [],
        "func": "==",
        "value_right": -0.12
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.sumAmount",
        "condition": [],
        "func": "==",
        "value_right": -1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.taxRate",
        "condition": [],
        "func": "==",
        "value_right": "0.13"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.parentCode",
        "condition": [],
        "func": "==",
        "value_right": "3079900000000000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.isVoided",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.discountType",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.discountTarget",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.preferentialFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.freeTax",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.vatSpecialManagement",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.taxFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.1.splitItem",
        "condition": [],
        "func": "==",
        "value_right": false
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.isRemoved",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.version",
        "condition": [],
        "func": "==",
        "value_right": 0
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.orderNum",
        "condition": [],
        "func": "==",
        "value_right": 3
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.detailName",
        "condition": [],
        "func": "==",
        "value_right": "*代理进口免税货物货款*666"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.standard",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.price",
        "condition": [],
        "func": "==",
        "value_right": 0.88495575
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.num",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.unit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.taxAmount",
        "condition": [],
        "func": "==",
        "value_right": 0.12
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.sumAmount",
        "condition": [],
        "func": "==",
        "value_right": 1
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.taxRate",
        "condition": [],
        "func": "==",
        "value_right": "0.13"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.parentCode",
        "condition": [],
        "func": "==",
        "value_right": "6090000000000000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.isVoided",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.discountType",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.preferentialFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.freeTax",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.vatSpecialManagement",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.taxFlag",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.splitItem",
        "condition": [],
        "func": "==",
        "value_right": false
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "data.2.priceExcludeTax",
        "condition": [],
        "func": "==",
        "value_right": 0.88
      }
    }
  ]
        },
        {
          "name": "前台-根据查询的INVOICE_ID，进行发票开具接口；",
          "desc": "",
          "type": "request",
          "params": {
            "name": "前台-开具发票接口",
            "desc": "",
            "host": "{{TEST_HOST_OTHER}}",
            "path": "/xxApi/api/v1/invoiceStay/stayInvoicePro",
            "method": "GET",
            "post_type": "json",
            "cookies": {
              "test_cas_access_token": "{{COOKIES_RECEPTION}}",
              "dev_cas_access_token": "{{COOKIES_RECEPTION}}"
            },
            "response_type": "json",
            "headers": null,
            "data": {
              "ids": "{{INVOICE_ID}}"
            }
          },
          "handlers": []
        },
        {
          "name": "数据库查询开具发票接口，确定字段信息，并验证有效字段；",
          "desc": "",
          "type": "plugIn",
          "params": {
            "params": {
              "host": "192.168.2.65",
              "user": "user1",
              "password": "123456",
              "db_name": "inv_xx",
              "SQL": "select * from xx_invoice_json_log where invoice_id = '{{INVOICE_ID}}'",
              "port": 5432,
              "field_list": [
                {
                  "field": "response",
                  "row": 0,
                  "col": 4
                }
              ]
            },
            "type": "pg_db"
          },
          "handlers":[
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "casherName",
        "condition": [],
        "func": "==",
        "value_right": "王晗"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "machineCode",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "tradeNo",
        "condition": [],
        "func": "==",
        "value_right": "{{BILL_ID_START}}"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "buyerBankAccount",
        "condition": [],
        "func": "==",
        "value_right": "125914056010701"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "sellerAddress",
        "condition": [],
        "func": "==",
        "value_right": "武汉市东西湖区新沟镇油纱路73号1栋"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "buyerName",
        "condition": [],
        "func": "==",
        "value_right": "折扣行"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "buyerAddress",
        "condition": [],
        "func": "==",
        "value_right": "南京市雨花台区软件大道66号华通科技园406室010-88233550"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "reviewerName",
        "condition": [],
        "func": "==",
        "value_right": "范荣峥"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "invoiceReqSerialNo",
        "condition": [],
        "func": "!=",
        "value_right": null
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "buyerBankName",
        "condition": [],
        "func": "==",
        "value_right": "招商银行股份有限公司南京雨花支行"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "sellerBankAccount",
        "condition": [],
        "func": "==",
        "value_right": "38310188000444553"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "buyerTaxpayerNum",
        "condition": [],
        "func": "==",
        "value_right": "123456787654111"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "sellerTel",
        "condition": [],
        "func": "==",
        "value_right": "027-65022526"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "drawerName",
        "condition": [],
        "func": "==",
        "value_right": "admin"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.unitPrice",
        "condition": [],
        "func": "==",
        "value_right": "1.00000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.taxRateValue",
        "condition": [],
        "func": "==",
        "value_right": "0.13"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.discountTaxRateAmount",
        "condition": [],
        "func": "==",
        "value_right": "-0.12"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.specificationModel",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.quantity",
        "condition": [],
        "func": "==",
        "value_right": "1.00000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.discountAmount",
        "condition": [],
        "func": "==",
        "value_right": "-1.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": "1.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.includeTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.zeroTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.taxRateAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.12"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.taxClassificationCode",
        "condition": [],
        "func": "==",
        "value_right": "3079900000000000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.goodsName",
        "condition": [],
        "func": "==",
        "value_right": "*生活服务*劳务派遣服务费"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.0.meteringUnit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.unitPrice",
        "condition": [],
        "func": "==",
        "value_right": "1.00000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.taxRateAmount",
        "condition": [],
        "func": "==",
        "value_right": "0.12"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.taxRateValue",
        "condition": [],
        "func": "==",
        "value_right": "0.13"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.specificationModel",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.quantity",
        "condition": [],
        "func": "==",
        "value_right": "1.00000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.taxClassificationCode",
        "condition": [],
        "func": "==",
        "value_right": "6090000000000000000"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.invoiceAmount",
        "condition": [],
        "func": "==",
        "value_right": "1.00"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.includeTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": "1"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.goodsName",
        "condition": [],
        "func": "==",
        "value_right": "*代理进口免税货物货款*666"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.meteringUnit",
        "condition": [],
        "func": "==",
        "value_right": "升"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "itemList.1.zeroTaxFlag",
        "condition": [],
        "func": "==",
        "value_right": ""
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "taxpayerNum",
        "condition": [],
        "func": "==",
        "value_right": "500102201007206608"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "extensionNum",
        "condition": [],
        "func": "==",
        "value_right": "0"
      }
    },
    {
      "type": "ext_asserts",
      "params": {
        "type": "json",
        "path": "sellerBankName",
        "condition": [],
        "func": "==",
        "value_right": "中国光大银行武汉分行营业部"
      }
    }
  ]
        }
      ]
    }
  ]
}

]